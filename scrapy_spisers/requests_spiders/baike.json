{"title": "Python", "summary": "\nPython[1] \n（英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/）, 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议[2] \n。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。Python具有丰富和强大的库。它常被昵称为胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。常见的一种应用情形是，使用Python快速生成程序的原型（有时甚至是程序的最终界面），然后对其中[3] \n有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。需要注意的是在您使用扩展类库时可能需要考虑平台问题，某些可能不提供跨平台的实现。7月20日，IEEE发布2017年编程语言排行榜：Python高居首位[4] \n。\n"}
{"title": "wiki", "summary": "\nWiki是一种在网络上开放且可供多人协同创作的超文本系统，由沃德·坎宁安于1995年首先开发，这种超文本系统支持面向社群的协作式写作，同时也包括一组支持这种写作。沃德·坎宁安将wiki定义为“一种允许一群用户用简单的描述来创建和连接一组网页的社会计算系统”。[1] \nWiki站点可以有多人（甚至任何访问者）维护，每个人都可以发表自己的意见，或者对共同的主题进行扩展或者探讨。\n"}
{"title": "PyPy", "summary": "\nPyPy是用Python实现的Python解释器。\n"}
{"title": "PyScripter", "summary": "\nPyScripter是一个使用Delphi开发的开源的Python集成开发环境（IDE），发布于MIT协议之下。\n"}
{"title": "SWIG", "summary": "\nSWIG是一家全球性视频点播和在线直播网络平台，将您已有的经过首轮播出过的节目资源进行第二次屏幕盈利。\n"}
{"title": "Python", "summary": "\nPython[1] \n（英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/）, 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议[2] \n。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。Python具有丰富和强大的库。它常被昵称为胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。常见的一种应用情形是，使用Python快速生成程序的原型（有时甚至是程序的最终界面），然后对其中[3] \n有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。需要注意的是在您使用扩展类库时可能需要考虑平台问题，某些可能不提供跨平台的实现。7月20日，IEEE发布2017年编程语言排行榜：Python高居首位[4] \n。\n"}
{"title": "gnu", "summary": "\nGNU计划，又称革奴计划，是由Richard Stallman在1983年9月27日公开发起的。它的目标是创建一套完全自由的操作系统。Richard Stallman最早是在net.unix-wizards新闻组上公布该消息，并附带《GNU宣言》等解释为何发起该计划的文章，其中一个理由就是要“重现当年软件界合作互助的团结精神”。为保证GNU软件可以自由地“使用、复制、修改和发布”，所有GNU软件都有一份在禁止其他人添加任何限制的情况下授权所有权利给任何人的协议条款，GNU通用公共许可证（GNU General Public License，GPL）。即“反版权”（或称Copyleft）概念。\n"}
{"title": "马特利", "summary": "\n中文名： 马特利 英文名： ArturMatlik 国籍： 德国 出生年月： 1977年9月2日 职业： 运动员 足球 身高： 180厘米 效力球队:慕士达 场上位置:中场\n"}
{"title": "Web应用框架", "summary": "\nWeb应用框架（Web application framework）是一种开发框架，用来支持动态网站、网络应用程序及网络服务的开发。其类型有基于请求的和基于组件的两种框架\n"}
{"title": "{}", "summary": "\n大括号\n"}
{"title": "Python", "summary": "\nPython[1] \n（英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/）, 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议[2] \n。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。Python具有丰富和强大的库。它常被昵称为胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。常见的一种应用情形是，使用Python快速生成程序的原型（有时甚至是程序的最终界面），然后对其中[3] \n有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。需要注意的是在您使用扩展类库时可能需要考虑平台问题，某些可能不提供跨平台的实现。7月20日，IEEE发布2017年编程语言排行榜：Python高居首位[4] \n。\n"}
{"title": "简洁", "summary": "\n简洁，是汉语词汇（ㄐㄧㄢˇ ㄐㄧㄝ ˊ），拼音指jiǎn jié，是形容词。意思是（说话、行为等）简明扼要，没有多余的内容。引申谓处世清白无瑕。南朝 宋 颜延之 《陶徵士诔》：“廉深简絜，贞夷粹温。”\n"}
{"title": "准时制", "summary": "\n准时制生产方式（Just In Time简称JIT），又称作无库存生产方式（stockless production），零库存（zero inventories），一个流（one-piece flow）或者超级市场生产方式（supermarket production）[1] \n。\n"}
{"title": "生产过程", "summary": "\n生产过程，是指从产品投产前一系列生产技术组织工作开始，直到把合格产品生产出来的全部过程，如图7-1所示。生产过程分为自然过程和劳动过程。劳动过程分为生产准备过程、基本生产过程、辅助生产过程和生产服务过程，基本生产过程又具体划分为工艺过程、检验过程和运输过程，分别由各自的工序组成。[1] \n生产过程是工业企业资金循环的第二阶段。在生产过程中，工人借助于劳动资料对劳动对象进行加工，制成劳动产品。因此，生产过程既是产品制造过程，又是物化劳动（劳动资料和劳动对象）和活劳动的消耗过程。机械产品的生产过程是指从原材料（或半成品）开始直到制造成为产品之间的各个相互联系的全部劳动过程的总和。\n"}
{"title": "“制造费用”账户", "summary": "\n它是成本类账户，用来归集和分配企业为生产产品和提供劳务而发生的各项间接费用，包括工资及福利费、折旧费、修理费、办公费、水电费、机物料消耗、劳动保护费、季节性修理期间的停工损失等以及其他不能直接计入产品生产成本的费用。\n"}
